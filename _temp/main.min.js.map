{"version":3,"sources":["js/homepage.js","js/main.js","js/master.js"],"names":[],"mappingsfile":"main.min.js","sourcesContent":["","$(document).ready(function() {\r\n\t$('[data-accordeon]').on(\"click\", function(e){\r\n\t\te.preventDefault();\r\n\t\t$(this).parent(\".dropdown\").closest(\".hasChildren\").slideToggle(slow);\r\n\t\tconsole.log(\"click\");\r\n\t});\r\n\t\r\n\r\n});\r\n","$(function () {\n  window.downloadPdf = function () {\n    $('.download-pdf').on(\"click\", function (f) {\n      f.preventDefault();\n      var value = $(this).parents(\".form-group\").find('[data-selected-value]').attr(\"data-selected-value\");\n      $(this).parents(\".form-group\").find(\"a\").each(function () {\n        var currentValue = $(this).attr(\"data-option-value\");\n        if (currentValue == value) {\n          $('#pdfDownloadFrame').attr(\"src\", value);\n        }\n      });\n    });\n  };\n  function replaceUrlParam(url, paramName, paramValue) {\n    var pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|$)');\n    if (url.search(pattern) >= 0) {\n      return url.replace(pattern, '$1' + paramValue + '$2');\n    }\n    return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\n  }\n  window.addToFavorites = function (arg) {\n    var addToFavorites = arg.attr(\"data-add-favorites\");\n    $.ajax({\n      url: addToFavorites,\n      type: 'POST'\n    }).done(function (response) {\n      console.log(\"success\");\n      alert(\"sent\");\n      arg.find(\".fa-heart\").removeClass(\"fa-heart-o\");\n      arg.attr(\"data-favorite\", \"true\");\n    }).fail(function (response) {\n      // console.log(\"error\");\n    }).always(function (response) {\n      // console.log(\"complete\");\n    });\n  };\n  window.removeFromFavorites = function (arg) {\n    var removeFromFavorites = arg.attr(\"data-remove-favorites\");\n    $.ajax({\n      url: removeFromFavorites,\n      type: 'POST'\n    }).done(function (response) {\n      console.log(\"success\");\n      alert(\"sent\");\n      arg.find(\".fa-heart\").addClass(\"fa-heart-o\");\n      arg.attr(\"data-favorite\", \"false\");\n    }).fail(function (response) {\n      // console.log(\"error\");\n    }).always(function (response) {\n      // console.log(\"complete\");\n    });\n  };\n  window.getQueryVariable = function (variable) {\n    var query = window.location.search.substring(1);\n    var vars = query.split(\"&\");\n    for (var i = 0; i < vars.length; i++) {\n      var pair = vars[i].split(\"=\");\n      if (pair[0] == variable) {\n        return pair[1];\n      }\n    }\n    return false;\n  };\n  var Navigation = React.createClass({\n    displayName: \"Navigation\",\n\n    getInitialState: function () {\n      return {\n        data: [],\n        selected: \"\"\n      };\n    },\n    componentDidMount: function () {\n\n      function markSelected(node, selected) {\n        if (!node) {\n          return null;\n        }\n\n        node.Selected = node.Id == selected;\n\n        if (node.Selected) {\n          node.Selected = true;\n          return node;\n        }\n\n        if (!node.Nodes || !node.Nodes.length) {\n          return null;\n        }\n\n        for (var i = 0; i < node.Nodes.length; i++) {\n          var nodeChild = node.Nodes[i];\n          var nodeFound = markSelected(nodeChild, selected);\n\n          if (nodeFound) {\n            node.Expanded = true;\n            return nodeFound;\n          }\n        }\n\n        return null;\n      }\n\n      $.getJSON(this.props.source, function (result) {\n        if (this.isMounted()) {\n          this.setState({\n            data: result\n          });\n          var param = getQueryVariable(\"bookmark\");\n          param = decodeURIComponent(param);\n          var that = this;\n          this.setState({ selected: param });\n          $.each(this.state.data, function (key, val) {\n\n            var node = markSelected(val, that.state.selected);\n\n            if (node) {\n              node.Expanded = true;\n            }\n            // do something with key and val\n          });\n          this.setState({ data: this.state.data });\n        }\n      }.bind(this));\n    },\n    openChild: function (e) {\n      e.preventDefault();\n      var target = e.target;\n      if ($(target).attr(\"data-expanded\") == \"true\") {\n        $(target).attr(\"data-expanded\", \"false\");\n        $(target).children(\".hasChildren\").hide();\n      } else {\n        $(target).attr(\"data-expanded\", \"true\");\n        $(target).children(\".hasChildren\").show();\n      }\n    },\n    // updateBookmark: function(){\n    //   this.props.updateBookmark;\n    // },  \n    eachItem: function (item, i) {\n      if (item.Nodes.length != 0) {\n        return React.createElement(\n          \"li\",\n          { key: i,\n            index: i,\n            className: i === this.props.active - 1 ? 'dropdown active' : 'dropdown',\n            onClick: this.openChild,\n            \"data-expanded\": item.Expanded\n          },\n          React.createElement(\n            \"a\",\n            { href: item.Id, className: item.Selected },\n            item.Name\n          ),\n          React.createElement(\n            \"ul\",\n            { className: \"hasChildren\", \"data-expanded\": item.Expanded },\n            React.createElement(NavigationTree, { data: item.Nodes })\n          )\n        );\n      } else {\n        return React.createElement(\n          \"li\",\n          { key: i,\n            index: i,\n            className: i === this.props.active - 1 ? 'dropdown active' : 'dropdown',\n            onClick: this.openChild,\n            \"data-expanded\": item.Expanded\n          },\n          React.createElement(\n            \"a\",\n            { href: item.Id, className: item.Selected },\n            item.Name\n          ),\n          React.createElement(\n            \"a\",\n            { href: \"\", \"data-bookmark\": item.Bookmarked, onClick: this.registerBookmark },\n            React.createElement(\"i\", { className: \"fa fa-bookmark-o\" })\n          )\n        );\n      }\n    },\n    render: function () {\n      return React.createElement(\n        \"ul\",\n        { className: \"componentWrapper\" },\n        this.state.data.map(this.eachItem)\n      );\n    }\n  });\n  var NavigationTree = React.createClass({\n    displayName: \"NavigationTree\",\n\n    getInitialState: function () {\n      return {\n        data: [],\n        bookmark: \"\"\n      };\n    },\n    update: function (arg) {\n      var target = $(arg.target);\n      var id = target.attr(\"href\");\n      var encodedId = encodeURIComponent(id);\n      var link = \"/Default.aspx?ID=126&groupId=\" + encodedId;\n      $('.navigation').find('a').removeClass(\"true\");\n      $('.navigation').find('li').removeAttr('data-expanded');\n      $(this).parents(\"li\").attr(\"data-expanded\", \"true\");\n      $(this).addClass(\"true\");\n      console.log(this.ref.link);\n      // console.log($(this).parents(\"li\"));\n      $.ajax({\n        url: link,\n        type: 'get'\n      }).done(function (data) {\n        // console.log(data);\n        $('#pageContent').html(data);\n\n        $('[data-select-downloadable] a').on(\"click\", function (e) {\n          e.preventDefault();\n          var value = $(this).attr(\"data-option-value\");\n          var name = $(this).attr(\"data-option-name\");\n          $(this).parents(\".btn-group\").find(\"[data-selected-value]\").attr(\"data-selected-value\", value);\n          $(this).parents(\".btn-group\").find(\"[data-selected-name]\").html(name);\n          console.log(\"intra-buton1\");\n        });\n        $('[data-tooltip]').tooltip();\n        $('[data-favorite]').on(\"click\", function (f) {\n          f.preventDefault();\n          var dataFavorite = $(this).attr(\"data-favorite\");\n          if (dataFavorite == \"true\") {\n            removeFromFavorites($(this));\n          } else {\n            addToFavorites($(this));\n          }\n        });\n        downloadPdf();\n        $('.product-list-link').on(\"click\", function (e) {\n          e.preventDefault();\n          var groupId = encodeURIComponent($(this).attr(\"data-group-id\"));\n          var productId = $(this).attr(\"href\");\n          var link = \"/Default.aspx?ID=126&groupId=\" + groupId + '&productId=' + productId;\n          console.log(link);\n\n          var n = noty({\n            text: 'Loading content...',\n            layout: 'center',\n            theme: 'relax',\n            animation: {\n              open: { height: 'toggle' }, // jQuery animate function property object\n              close: { height: 'toggle' }, // jQuery animate function property object\n              easing: 'swing', // easing\n              speed: 500 // opening & closing animation speed\n            },\n            type: 'information',\n            timeout: false\n\n          });\n          $.ajax({\n            url: link,\n            type: 'get'\n          }).done(function (newResult) {\n            console.log(\"loading\");\n            $('#pageContent').html(newResult);\n            $.noty.closeAll();\n            //EVENT LISTENERS\n            $('[data-select-downloadable] a').on(\"click\", function (e) {\n              e.preventDefault();\n              var value = $(this).attr(\"data-option-value\");\n              var name = $(this).attr(\"data-option-name\");\n              $(this).parents(\".btn-group\").find(\"[data-selected-value]\").attr(\"data-selected-value\", value);\n              $(this).parents(\".btn-group\").find(\"[data-selected-name]\").html(name);\n              console.log(\"intra-buton2\");\n            });\n            $('[data-tooltip]').tooltip();\n            $('[data-favorite]').on(\"click\", function (f) {\n              f.preventDefault();\n              var dataFavorite = $(this).attr(\"data-favorite\");\n              if (dataFavorite == \"true\") {\n                removeFromFavorites($(this));\n              } else {\n                addToFavorites($(this));\n              }\n            });\n            downloadPdf();\n            $('.product-list-link').on(\"click\", function (e) {\n              e.preventDefault();\n              var groupId = encodeURIComponent($(this).attr(\"data-group-id\"));\n              var productId = $(this).attr(\"href\");\n              var link = \"/Default.aspx?ID=126&groupId=\" + groupId + '&productId=' + productId;\n              console.log(link);\n\n              var n = noty({\n                text: 'Loading content...',\n                layout: 'center',\n                theme: 'relax',\n                animation: {\n                  open: { height: 'toggle' }, // jQuery animate function property object\n                  close: { height: 'toggle' }, // jQuery animate function property object\n                  easing: 'swing', // easing\n                  speed: 500 // opening & closing animation speed\n                },\n                type: 'information',\n                timeout: false\n\n              });\n              $.ajax({\n                url: link,\n                type: 'get'\n              }).done(function (newResult) {\n                console.log(\"loading\");\n                $('#pageContent').html(newResult);\n                $.noty.closeAll();\n              }).fail(function () {\n                // console.log(\"error\");\n              }).always(function () {\n                // console.log(\"complete\");\n              });\n            });\n            console.log(\"downloadenter\");\n            downloadPdf();\n            //EVENT LISTENERS\n          }).fail(function () {\n            // console.log(\"error\");\n          }).always(function () {\n            // console.log(\"complete\");\n          });\n        });\n      }).fail(function () {\n        // console.log(\"error\");\n      }).always(function () {\n        // console.log(\"complete\");\n      });\n    },\n    registerBookmark: function (arg) {\n      var target = $(arg.target).parent(\"a\");\n      var bookmark = target[0].attributes[\"data-bookmark\"].value;\n      var groupName = target[0].attributes[\"data-group\"].value;\n      var id = target[0].attributes[\"href\"].value;\n      var index = target[0].attributes[\"data-index\"].value;\n      // console.log(bookmark);\n\n      var that = this;\n      if (bookmark == \"true\") {\n        var requestUrl = \"/Files/WebServices/Bookmarks.ashx?action=delete&group=\" + encodeURIComponent(id);\n        $.ajax({\n          method: \"GET\",\n          url: requestUrl,\n          contentType: \"application/json\",\n          cache: false\n        }).done(function (msg) {\n          for (var i = 0; i < that.state.data.length; i++) {\n            var item = that.state.data[i];\n            var itemId = item.Id;\n            if (id == itemId) {\n              item.Bookmarked = false;\n              break;\n            }\n          }\n          that.setState(that.state);\n        }).fail(function (e) {});\n      } else {\n        $.ajax({\n          method: \"POST\",\n          url: \"/Files/WebServices/Bookmarks.ashx\",\n          data: JSON.stringify({ Group: id, Name: groupName }),\n          contentType: \"application/json\"\n        }).done(function (msg) {\n          for (var i = 0; i < that.state.data.length; i++) {\n            var item = that.state.data[i];\n            var itemId = item.Id;\n            if (id == itemId) {\n              item.Bookmarked = true;\n              break;\n            }\n          }\n          that.setState(that.state);\n        }).fail(function (e) {});\n      }\n    },\n    componentDidMount: function () {\n      this.setState({ data: this.props.data });\n    },\n\n    eachItem: function (item, i) {\n      if (item.Nodes.length != 0) {\n        var nodes = item.Nodes;\n        return React.createElement(\n          \"li\",\n          { key: i,\n            index: i,\n            className: i === this.props.active - 1 ? 'dropdown active' : 'dropdown',\n            onClick: this.openChild,\n            \"data-expanded\": item.Expanded\n          },\n          React.createElement(\n            \"a\",\n            { href: item.Id, className: item.Selected },\n            item.Name\n          ),\n          React.createElement(\n            \"ul\",\n            { className: \"hasChildren\", \"data-expanded\": item.Expanded },\n            React.createElement(NavigationTree, { key: i, data: item.Nodes })\n          )\n        );\n      } else {\n        return React.createElement(\n          \"li\",\n          { key: i,\n            index: i,\n            className: \"noIcon\",\n            onClick: this.openChild,\n            \"data-expanded\": item.Expanded\n          },\n          React.createElement(\n            \"a\",\n            { href: item.Id, onClick: this.update, index: i, \"data-overflow\": true, className: item.Selected, \"data-toggle\": \"tooltip\", \"data-placement\": \"right\", title: item.Name },\n            item.Name\n          ),\n          React.createElement(\n            \"a\",\n            { href: item.Id, \"data-index\": i, \"data-group\": item.Name, \"data-bookmark\": item.Bookmarked, onClick: this.registerBookmark, ref: \"link\" },\n            React.createElement(\"i\", { className: \"fa fa-bookmark-o\" })\n          )\n        );\n      }\n    },\n    render: function () {\n      return React.createElement(\n        \"div\",\n        null,\n        this.state.data.map(this.eachItem)\n      );\n    }\n  });\n  var MainContent = React.createClass({\n    displayName: \"MainContent\",\n\n    getInitialState: function () {\n      return {\n        data: \"\"\n      };\n    },\n    componentDidMount: function () {\n      var _this = this;\n      var param = getQueryVariable(\"bookmark\");\n      if (param != false) {\n        var link = '/Default.aspx?ID=126&groupId=' + param;\n        $.ajax({\n          url: link,\n          type: 'get'\n        }).done(function (result) {\n          if (_this.isMounted()) {\n            _this.setState({ data: result });\n            $('#pageContent').html(result);\n            (function () {\n              $('[data-select-downloadable] a').on(\"click\", function (e) {\n                e.preventDefault();\n                var value = $(this).attr(\"data-option-value\");\n                var name = $(this).attr(\"data-option-name\");\n                $(this).parents(\".btn-group\").find(\"[data-selected-value]\").attr(\"data-selected-value\", value);\n                $(this).parents(\".btn-group\").find(\"[data-selected-name]\").html(name);\n                console.log(\"intra-buton3\");\n              });\n              downloadPdf();\n              $('[data-tooltip]').tooltip();\n              $('[data-favorite]').on(\"click\", function (f) {\n                f.preventDefault();\n                var dataFavorite = $(this).attr(\"data-favorite\");\n                if (dataFavorite == \"true\") {\n                  removeFromFavorites($(this));\n                } else {\n                  addToFavorites($(this));\n                }\n              });\n              setTimeout(function () {\n                console.log(\"enter 1200\");\n                $('[data-favorite]').on(\"click\", function (f) {\n                  f.preventDefault();\n                  var dataFavorite = $(this).attr(\"data-favorite\");\n                  if (dataFavorite == \"true\") {\n                    removeFromFavorites($(this));\n                  } else {\n                    addToFavorites($(this));\n                  }\n                }, 1000);\n              });\n              console.log(\"intra\");\n              $('.product-list-link').on(\"click\", function (e) {\n                e.preventDefault();\n                var groupId = encodeURIComponent($(this).attr(\"data-group-id\"));\n                var productId = $(this).attr(\"href\");\n                var link = \"/Default.aspx?ID=126&groupId=\" + groupId + '&productId=' + productId;\n                console.log(link);\n                $.ajax({\n                  url: link,\n                  type: 'get'\n                }).done(function (newResult) {\n                  console.log(\"loading\");\n                  $('#pageContent').html(newResult);\n                }).fail(function () {\n                  // console.log(\"error\");\n                }).always(function () {\n                  // console.log(\"complete\");\n                });\n              });\n            })();\n          }\n        }).fail(function () {\n          // console.log(\"error\");\n        }).always(function () {\n          // console.log(\"complete\");\n        });\n      } else {\n\n          $('[data-select-downloadable] a').on(\"click\", function (e) {\n            e.preventDefault();\n            var value = $(this).attr(\"data-option-value\");\n            var name = $(this).attr(\"data-option-name\");\n            $(this).parents(\".btn-group\").find(\"[data-selected-value]\").attr(\"data-selected-value\", value);\n            $(this).parents(\".btn-group\").find(\"[data-selected-name]\").html(name);\n            console.log(\"intra-buton4\");\n          });\n          $('[data-tooltip]').tooltip();\n          $('[data-favorite]').on(\"click\", function (f) {\n            f.preventDefault();\n            var dataFavorite = $(this).attr(\"data-favorite\");\n            if (dataFavorite == \"true\") {\n              removeFromFavorites($(this));\n            } else {\n              addToFavorites($(this));\n            }\n          });\n          downloadPdf();\n          $('.product-list-link').on(\"click\", function (e) {\n            e.preventDefault();\n            var groupId = encodeURIComponent($(this).attr(\"data-group-id\"));\n            var productId = $(this).attr(\"href\");\n            var link = \"/Default.aspx?ID=126&groupId=\" + groupId + '&productId=' + productId;\n            console.log(link);\n            $.ajax({\n              url: link,\n              type: 'get'\n            }).done(function (newResult) {\n              console.log(\"loading\");\n              $('#pageContent').html(newResult);\n            }).fail(function () {\n              // console.log(\"error\");\n            }).always(function () {\n              // console.log(\"complete\");\n            });\n          });\n        }\n      $('[data-select-downloadable] a').on(\"click\", function (e) {\n        e.preventDefault();\n        alert(\"click\");\n      });\n    },\n    render: function () {\n      return React.createElement(\n        \"div\",\n        { id: \"pageContent\" },\n        React.createElement(\"div\", { className: \"loading-image\" })\n      );\n    }\n  });\n  var RenderPage = React.createClass({\n    displayName: \"RenderPage\",\n\n    getInitialState: function () {\n      return {\n        catalog: \"\",\n        catgalogName: \"\"\n      };\n    },\n    componentDidMount: function () {\n      var name = getQueryVariable(\"catalog\");\n      var param = getQueryVariable(\"catalog\").toLowerCase();\n      var link = \"/Files/WebServices/Navigation.ashx?catalog=\" + param;\n      this.setState({ catalogName: name });\n      this.setState({ catalog: link });\n    },\n\n    //  onChildChanged: function(newState) {\n    //       this.setState({ checked: newState });\n    // },\n    render: function () {\n\n      return React.createElement(\n        \"div\",\n        { className: \"wrapper\" },\n        React.createElement(\n          \"div\",\n          { className: \"col-sm-3\" },\n          React.createElement(\n            \"div\",\n            { id: \"catalogNavContainer\" },\n            React.createElement(\n              \"section\",\n              { className: \"catalogNavSection topSection\" },\n              React.createElement(\n                \"h1\",\n                null,\n                this.state.catalogName\n              ),\n              React.createElement(\n                \"a\",\n                { href: \"/Default.aspx?ID=1\", className: \"btn btn-sm btn-warning pull-right\" },\n                \"Select Catalog\"\n              )\n            ),\n            React.createElement(\n              \"section\",\n              { className: \"catalogNavSection searchSection\" },\n              React.createElement(\n                \"form\",\n                { action: \"/Default.aspx\", id: \"searchForm\" },\n                React.createElement(\"input\", { type: \"hidden\", name: \"ID\", value: \"127\" }),\n                React.createElement(\"input\", { placeholder: \"Serial #\", id: \"searchSubmit\", \"data-error\": \"Search for something\", type: \"text\", name: \"q\", value: this.props.children }),\n                React.createElement(\n                  \"button\",\n                  { className: \"btn btn-sm btn-warning\", type: \"submit\" },\n                  React.createElement(\"i\", { className: \"fa fa-search\" })\n                )\n              )\n            ),\n            React.createElement(\n              \"section\",\n              { className: \"catalogNavSection navSection navigation\" },\n              React.createElement(Navigation, { \"test-source\": this.state.catalog, source: \"/Files/WebServices/Navigation.ashx?catalog=jayco\", onChange: this.update })\n            )\n          )\n        ),\n        React.createElement(\n          \"div\",\n          { className: \"col-sm-9\" },\n          React.createElement(MainContent, null)\n        )\n      );\n    }\n  });\n\n  ReactDOM.render(React.createElement(RenderPage, null), document.getElementById('react-renderPage'));\n  // ReactDOM.render(<Navigation source=\"http://localhost:3000/resources/navigation.json\"  />, document.getElementById('react-navigation'));\n});"],"sourceRoot":"/source/"}